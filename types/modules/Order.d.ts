export class Order extends DominosFormat {
    constructor(customer: any);
    address: Address;
    amounts: {};
    amountsBreakdown: AmountsBreakdown;
    businessDate: string;
    coupons: any[];
    currency: string;
    customerID: string;
    estimatedWaitMinutes: string;
    email: string;
    extension: string;
    firstName: string;
    hotspotsLite: boolean;
    iP: string;
    lastName: string;
    languageCode: string;
    market: string;
    metaData: {
        calculateNutrition: boolean;
        contactless: boolean;
    };
    newUser: boolean;
    noCombine: boolean;
    orderChannel: string;
    orderID: string;
    orderInfoCollection: any[];
    orderMethod: string;
    orderTaker: string;
    partners: {};
    payments: any[];
    phone: string;
    phonePrefix: string;
    priceOrderMs: number;
    priceOrderTime: string;
    products: any[];
    promotions: {};
    pulseOrderGuid: string;
    serviceMethod: string;
    sourceOrganizationURI: string;
    storeID: string;
    tags: {};
    userAgent: string;
    version: string;
    orderInFuture(date: any): void;
    futureOrderTime: any;
    orderNow(): void;
    addCustomer(customer: any): this;
    addCoupon(couponCode: any): this;
    removeCoupon(couponCode: any): this;
    addItem(item: any): this;
    removeItem(item: any): this;
    get payload(): string;
    set validationResponse(arg: {});
    get validationResponse(): {};
    set priceResponse(arg: {});
    get priceResponse(): {};
    set placeResponse(arg: {});
    get placeResponse(): {};
    validate(): Promise<this>;
    price(): Promise<this>;
    place(): Promise<this>;
    #private;
}
import DominosFormat from './DominosFormat.js';
import Address from '../modules/Address.js';
import AmountsBreakdown from './AmountsBreakdown.js';
export { Order as default };
